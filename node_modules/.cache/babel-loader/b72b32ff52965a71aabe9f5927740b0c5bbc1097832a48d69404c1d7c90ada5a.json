{"ast":null,"code":"var _jsxFileName = \"/Users/muramatsuharuka/Downloads/React/api-weather/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Title from \"./components/Title\"; //Title.jsのTitleコンポーネントがApp.jsに取り込まれる\nimport Form from \"./components/Form\";\nimport Results from \"./components/Results\";\nimport './App.css';\nimport { set } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState(\"\"); //「city」にユーザーが入力した都市名が保管される。「setCity」がstateにデータを書き込んだり操作したりする仕組みのこと。(\"\")はstateの初期値。\n  const [results, setResults] = useState({\n    country: \"\",\n    cityName: \"\",\n    temperature: \"\",\n    conditionText: \"\",\n    icon: \"\"\n  });\n  //下記は都市名のデータをAPIに渡している。\n  const getWeather = e => {\n    e.preventDefault();\n    axios.get(`https://api.weatherapi.com/v1/current.json?key=70244d26e5bf4b948c671556231902&q=${city}&aqi=no`)\n    //resにはAPIから送り返されたデータが入っている。setResultsを使うとresultstateにデータを書き込める\n    .then(res => {\n      setResults({\n        country: res.data.location.country,\n        cityName: res.data.location.name,\n        temperature: res.data.current.temp_c,\n        conditionText: res.data.current.condition.text,\n        icon: res.data.current.condition.icon\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        setCity: setCity,\n        getWeather: getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JJ3lpyS78hcc75ZUMsSVpJuup5s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","Title","Form","Results","set","jsxDEV","_jsxDEV","App","_s","city","setCity","results","setResults","country","cityName","temperature","conditionText","icon","getWeather","e","preventDefault","get","then","res","data","location","name","current","temp_c","condition","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/muramatsuharuka/Downloads/React/api-weather/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport Title from \"./components/Title\";//Title.jsのTitleコンポーネントがApp.jsに取り込まれる\nimport Form from \"./components/Form\";\nimport Results from \"./components/Results\";\n\n\nimport './App.css';\nimport { set } from \"lodash\";\n\nfunction App() {\n  const [city,setCity]=useState(\"\");//「city」にユーザーが入力した都市名が保管される。「setCity」がstateにデータを書き込んだり操作したりする仕組みのこと。(\"\")はstateの初期値。\n  const [results,setResults]=useState({\n    country:\"\",\n    cityName:\"\",\n    temperature:\"\",\n    conditionText:\"\",\n    icon:\"\"\n  });\n  //下記は都市名のデータをAPIに渡している。\n  const getWeather = (e) => {\n      e.preventDefault();\n      axios.get(`https://api.weatherapi.com/v1/current.json?key=70244d26e5bf4b948c671556231902&q=${city}&aqi=no`)\n      //resにはAPIから送り返されたデータが入っている。setResultsを使うとresultstateにデータを書き込める\n          .then(res => {\n            setResults({\n              country:res.data.location.country,\n              cityName:res.data.location.name,\n              temperature:res.data.current.temp_c,\n              conditionText:res.data.current.condition.text,\n              icon:res.data.current.condition.icon\n            })\n          })\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className=\"sub-wrapper\">\n      <Title />\n      <Form setCity={setCity} getWeather={getWeather}/>\n      <Results results={results}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB,CAAC;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAG1C,OAAO,WAAW;AAClB,SAASC,GAAG,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC,CAAC;EAClC,MAAM,CAACY,OAAO,EAACC,UAAU,CAAC,GAACb,QAAQ,CAAC;IAClCc,OAAO,EAAC,EAAE;IACVC,QAAQ,EAAC,EAAE;IACXC,WAAW,EAAC,EAAE;IACdC,aAAa,EAAC,EAAE;IAChBC,IAAI,EAAC;EACP,CAAC,CAAC;EACF;EACA,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBpB,KAAK,CAACqB,GAAG,CAAE,mFAAkFZ,IAAK,SAAQ;IAC1G;IAAA,CACKa,IAAI,CAACC,GAAG,IAAI;MACXX,UAAU,CAAC;QACTC,OAAO,EAACU,GAAG,CAACC,IAAI,CAACC,QAAQ,CAACZ,OAAO;QACjCC,QAAQ,EAACS,GAAG,CAACC,IAAI,CAACC,QAAQ,CAACC,IAAI;QAC/BX,WAAW,EAACQ,GAAG,CAACC,IAAI,CAACG,OAAO,CAACC,MAAM;QACnCZ,aAAa,EAACO,GAAG,CAACC,IAAI,CAACG,OAAO,CAACE,SAAS,CAACC,IAAI;QAC7Cb,IAAI,EAACM,GAAG,CAACC,IAAI,CAACG,OAAO,CAACE,SAAS,CAACZ;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;EACV,CAAC;EACD,oBACEX,OAAA;IAAKyB,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtB1B,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC5B1B,OAAA,CAACL,KAAK;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT9B,OAAA,CAACJ,IAAI;QAACQ,OAAO,EAAEA,OAAQ;QAACQ,UAAU,EAAEA;MAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjD9B,OAAA,CAACH,OAAO;QAACQ,OAAO,EAAEA;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CAjCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}